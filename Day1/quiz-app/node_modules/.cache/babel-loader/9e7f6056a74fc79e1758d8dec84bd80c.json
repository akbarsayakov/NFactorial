{"ast":null,"code":"var _jsxFileName = \"/Users/akbarsayakov/Documents/NFactorial/Homework/quiz-app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nconst questions = [{\n  \"5!\": 120\n}, {\n  \"2!\": 2\n}, {\n  \"4!\": 23\n}, {\n  \"6!\": 222\n}];\n\nconst getRandomQuestion = () => {\n  return questions[Math.floor(Math.random() * questions.length)];\n};\n\nfunction App() {\n  const [text, setText] = React.useState(\"abcd\");\n  const [randVal, setVal] = React.useState(getRandomQuestion());\n\n  const questionOutput = arg => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, arg);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, randVal), /*#__PURE__*/React.createElement(\"input\", {\n    value: text,\n    onChange: event => {\n      console.log(typeof event.target.value);\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      getRandomQuestion();\n      setText(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Sumbit\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akbarsayakov/Documents/NFactorial/Homework/quiz-app/src/App.js"],"names":["React","questions","getRandomQuestion","Math","floor","random","length","App","text","setText","useState","randVal","setVal","questionOutput","arg","event","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAGA,MAAOC,SAAS,GAAG,CAAC;AAAC,QAAO;AAAR,CAAD,EAAe;AAAC,QAAM;AAAP,CAAf,EAA0B;AAAC,QAAM;AAAP,CAA1B,EAAsC;AAAC,QAAM;AAAP,CAAtC,CAAnB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,SAAOD,SAAS,CAAEE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACK,MAArC,CAAF,CAAhB;AACD,CAFD;;AAIA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,MAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBZ,KAAK,CAACU,QAAN,CAAeR,iBAAiB,EAAhC,CAA1B;;AAMA,QAAMW,cAAc,GAAIC,GAAD,IAAS;AAC9B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,GAAJ,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,OAAN,CADF,eAEE;AACE,IAAA,KAAK,EAAEH,IADT;AAEE,IAAA,QAAQ,EAAGO,KAAD,IAAW;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,KAAK,CAACG,MAAN,CAAaC,KAAhC;AACAV,MAAAA,OAAO,CAACM,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE;AACE,IAAA,OAAO,EAAE,MAAM;AACbjB,MAAAA,iBAAiB;AACjBO,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,eAiBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAM,CAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CADF;AAuBD;;AAED,eAAeF,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\n\nconst  questions = [{\"5!\" : 120}, {\"2!\": 2}, {\"4!\": 23}, {\"6!\": 222}]\n\nconst getRandomQuestion = () => {\n  return questions[(Math.floor(Math.random() * questions.length))];\n}\n\nfunction App() {\n  const [text, setText] = React.useState(\"abcd\");\n  const [randVal, setVal] = React.useState(getRandomQuestion());\n\n\n\n  \n\n  const questionOutput = (arg) => {\n    return <p>{arg}</p>\n  }\n\n  return (\n    <div>\n      <div>{randVal}</div>\n      <input\n        value={text}\n        onChange={(event) => {\n          console.log(typeof event.target.value)\n          setText(event.target.value);\n        }}\n      ></input>\n      <button\n        onClick={() => {\n          getRandomQuestion();\n          setText(\"\");\n        }}\n      >\n        Reset\n      </button>\n      <button type=\"submit\" onClick={() => {}}>\n        Sumbit\n      </button>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}