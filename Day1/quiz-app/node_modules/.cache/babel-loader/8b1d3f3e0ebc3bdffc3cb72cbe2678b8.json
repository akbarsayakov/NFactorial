{"ast":null,"code":"var _jsxFileName = \"/Users/akbarsayakov/Documents/NFactorial/Homework/quiz-app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [text, setText] = React.useState(\"abcd\");\n  const [randVal, setVal] = React.useState(questions[Math.floor(Math.random() * questions.lengt)]);\n\n  const checkAnswer = () => {\n    text == 120 ? alert(\"Correct\") : alert(\"Incorrect\");\n  };\n\n  const questionOutput = arg => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }\n    }, arg);\n  };\n\n  const questions = [\"5!\", \"2!\", \"4!\", \"6!\"];\n  const newRand = Math.floor(Math.random() * questions.length);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, questionOutput(questions[randVal])), /*#__PURE__*/React.createElement(\"input\", {\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setVal(newRand);\n      setText(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: checkAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Sumbit\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/akbarsayakov/Documents/NFactorial/Homework/quiz-app/src/App.js"],"names":["React","App","text","setText","useState","randVal","setVal","questions","Math","floor","random","lengt","checkAnswer","alert","questionOutput","arg","newRand","length","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,MAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBN,KAAK,CAACI,QAAN,CAAeG,SAAS,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,SAAS,CAACI,KAArC,CAAD,CAAxB,CAA1B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBV,IAAAA,IAAI,IAAI,GAAR,GAAcW,KAAK,CAAC,SAAD,CAAnB,GAAiCA,KAAK,CAAC,WAAD,CAAtC;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,GAAD,IAAS;AAC9B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,GAAJ,CAAP;AACD,GAFD;;AAIA,QAAMR,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAlB;AACA,QAAMS,OAAO,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,SAAS,CAACU,MAArC,CAAhB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,cAAc,CAACP,SAAS,CAACF,OAAD,CAAV,CAApB,CADF,eAEE;AACE,IAAA,KAAK,EAAEH,IADT;AAEE,IAAA,QAAQ,EAAGgB,KAAD,IAAW;AACnBf,MAAAA,OAAO,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AACE,IAAA,OAAO,EAAE,MAAM;AACbd,MAAAA,MAAM,CAACU,OAAD,CAAN;AACAb,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,eAgBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAES,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CADF;AAsBD;;AAED,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [text, setText] = React.useState(\"abcd\");\n  const [randVal, setVal] = React.useState(questions[Math.floor(Math.random() * questions.lengt)])\n\n  const checkAnswer = () => {\n    text == 120 ? alert(\"Correct\") : alert(\"Incorrect\")\n  }\n\n  const questionOutput = (arg) => {\n    return <p>{arg}</p>\n  }\n\n  const questions = [\"5!\", \"2!\", \"4!\", \"6!\"]\n  const newRand = Math.floor(Math.random() * questions.length);\n  return (\n    <div>\n      <div>{questionOutput(questions[randVal])}</div>\n      <input\n        value={text}\n        onChange={(event) => {\n          setText(event.target.value);\n        }}\n      ></input>\n      <button\n        onClick={() => {\n          setVal(newRand);\n          setText(\"\");\n        }}\n      >\n        Reset\n      </button>\n      <button type=\"submit\" onClick={checkAnswer}>\n        Sumbit\n      </button>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}